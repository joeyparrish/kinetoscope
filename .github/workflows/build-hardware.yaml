name: Build Hardware

on:
  push: # Trigger for pushes.
    branches:
      - main
    paths:
      - hardware/**
      - .github/workflows/build-hardware.yaml
  pull_request: # Trigger for pull requests.
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch: # Allows for manual triggering.
    inputs:
      ref:
        description: "The ref to build."
        required: false
  workflow_call: # Allows for another workflow to call this one.
    inputs:
      ref:
        description: "The ref to build."
        required: true
        type: string

# If another instance of this workflow is started for the same PR, cancel the
# old one.  If a PR is updated and a new test run is started, the old test run
# will be cancelled automatically to conserve resources.
concurrency:
  group: build-hardware-${{ inputs.ref || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Hardware
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}

      - name: Configure KiCad PPA
        run: |
          sudo add-apt-repository --yes ppa:kicad/kicad-8.0-releases
          sudo apt update

      - name: Make Apt Packages Cacheable
        run: |
          sudo chmod 777 /var/cache/apt/archives/
          # NOTE: hashFiles (below) can only operate inside the workspace.
          cp /var/lib/apt/lists/ppa.launchpadcontent.net_kicad_kicad-8.0-releases_ubuntu_dists_jammy_InRelease kicad.ppa.release

      - name: Cache KiCad Packages
        id: cache-packages
        uses: actions/cache@v4
        with:
          path: /var/cache/apt/archives/**.deb
          # NOTE: hashFiles can only operate inside the workspace (copy above).
          key: kicad-packages-${{ hashFiles('kicad.ppa.release') }}

      - name: Download KiCad (unless cached)
        if: steps.cache-packages.outputs.cache-hit != 'true'
        run: sudo apt install --download-only kicad

      - name: Install KiCad
        run: sudo apt install kicad

      - name: Install custom symbols and footprints
        run: |
          mkdir -p ~/.local/share/kicad/8.0
          cp -a hardware/libraries/* ~/.local/share/kicad/8.0/
          mkdir -p ~/.config/kicad/8.0
          cp .github/workflows/*-lib-table ~/.config/kicad/8.0/

      - name: Install Kode Mono font
        run: |
          wget https://github.com/isaozler/kode-mono/releases/download/1.206/kode-mono-fonts.zip
          unzip kode-mono-fonts.zip
          mkdir -p ~/.local/share/fonts
          cp kode-mono-fonts/fonts/ttf/* ~/.local/share/fonts/
          rm -rf kode-mono-fonts

      - name: Generate fab outputs
        run: |
          cd hardware
          ./fab-jlcpcb.sh cart
          ./fab-jlcpcb.sh microcontroller
          ./fab-jlcpcb.sh sram-bank

      - name: Upload fab outputs
        uses: actions/upload-artifact@v4
        with:
          name: hardware
          path: hardware/*-fab.zip
