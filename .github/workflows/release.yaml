name: Release

on:
  push: # Trigger on new version tags
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

# If another instance of this workflow is started for the same PR, cancel the
# old one.  If a PR is updated and a new test run is started, the old test run
# will be cancelled automatically to conserve resources.
concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

# Necessary permissions to create a release.
permissions:
  contents: write

jobs:
  software:
    uses: joeyparrish/kinetoscope/.github/workflows/build-software.yaml@main
    with:
      ref: ${{ github.ref }}

  firmware:
    uses: joeyparrish/kinetoscope/.github/workflows/build-firmware.yaml@main
    with:
      ref: ${{ github.ref }}

  hardware:
    uses: joeyparrish/kinetoscope/.github/workflows/build-hardware.yaml@main
    with:
      ref: ${{ github.ref }}

  emulators:
    uses: joeyparrish/kinetoscope/.github/workflows/build-emulators.yaml@main
    with:
      ref: ${{ github.ref }}

  release:
    needs:
      - software
      - firmware
      - hardware
      - emulators

    name: Compile Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          path: source

      - name: Pull Never Gonna Give You Up ROM
        uses: actions/download-artifact@v4
        with:
          name: never-gonna-give-you-up-rom
          path: kinetoscope-never-gonna-give-you-up-rom

      - name: Pull You Spin Me Round ROM
        uses: actions/download-artifact@v4
        with:
          name: you-spin-me-round-rom
          path: kinetoscope-you-spin-me-round-rom

      - name: Pull streamer ROM
        uses: actions/download-artifact@v4
        with:
          name: streamer-rom
          path: kinetoscope-streamer-rom

      - name: Pull firmware
        uses: actions/download-artifact@v4
        with:
          name: firmware
          path: kinetoscope-firmware

      - name: Pull hardware
        uses: actions/download-artifact@v4
        with:
          name: hardware
          path: kinetoscope-hardware

      - name: Pull blastem
        uses: actions/download-artifact@v4
        with:
          name: blastem-linux
          path: kinetoscope-blastem64-0.6.2-linux-x64

      - name: Arrange release artifacts
        run: |
          # Debug: show everything we execute.
          set -x
          # Debug: show all downloaded artifacts.
          find -ls

          VERSION=$( echo ${{ github.ref }} | sed -e 's@refs/tags/@@' )

          # Prep encoder.
          mkdir kinetoscope-$VERSION-encoder/
          cp source/encoder/encode_sega_video.py kinetoscope-$VERSION-encoder/
          cp source/LICENSE.txt kinetoscope-$VERSION-encoder/
          echo "This Python 3 script, with the help of FFmpeg, generates videos that can be played back on a Sega Genesis / Mega Drive with Kinetoscope." >> kinetoscope-$VERSION-encoder/README.txt
          zip -r9 kinetoscope-$VERSION-encoder.zip kinetoscope-$VERSION-encoder/

          # Prep player source.
          cp -a source/software/player/ kinetoscope-$VERSION-player
          cp source/LICENSE.txt kinetoscope-$VERSION-player/
          zip -r9 kinetoscope-$VERSION-player.zip kinetoscope-$VERSION-player/

          # Prep Never Gonna Give You Up ROM.
          mv kinetoscope-never-gonna-give-you-up-rom/rom.bin kinetoscope-never-gonna-give-you-up-rom/kinetoscope-never-gonna-give-you-up.bin
          cp source/LICENSE.txt kinetoscope-never-gonna-give-you-up-rom/
          echo "This Kinetoscope demo ROM will run on any system or emulator." >> kinetoscope-never-gonna-give-you-up-rom/README.txt
          mv kinetoscope-never-gonna-give-you-up-rom kinetoscope-$VERSION-never-gonna-give-you-up-rom
          zip -r9 kinetoscope-$VERSION-never-gonna-give-you-up-rom.zip kinetoscope-$VERSION-never-gonna-give-you-up-rom/

          # Prep You Spin Me Round ROM.
          mv kinetoscope-you-spin-me-round-rom/rom.bin kinetoscope-you-spin-me-round-rom/kinetoscope-you-spin-me-round.bin
          cp source/LICENSE.txt kinetoscope-you-spin-me-round-rom/
          echo "This Kinetoscope demo ROM will run on any system or emulator." >> kinetoscope-you-spin-me-round-rom/README.txt
          mv kinetoscope-you-spin-me-round-rom kinetoscope-$VERSION-you-spin-me-round-rom
          zip -r9 kinetoscope-$VERSION-you-spin-me-round-rom.zip kinetoscope-$VERSION-you-spin-me-round-rom/

          # Prep streamer ROM.
          mv kinetoscope-streamer-rom/rom.bin kinetoscope-streamer-rom/kinetoscope-streamer.bin
          cp source/LICENSE.txt kinetoscope-streamer-rom/
          echo "The Kinetoscope streamer ROM is built to be flashed to Kinetoscope hardware or run inside an emulator built with Kinetoscope support." >> kinetoscope-streamer-rom/README.txt
          mv kinetoscope-streamer-rom kinetoscope-$VERSION-streamer-rom
          zip -r9 kinetoscope-$VERSION-streamer-rom.zip kinetoscope-$VERSION-streamer-rom/

          # Prep firmware.
          mv kinetoscope-firmware/firmware.ino.uf2 kinetoscope-firmware/kinetoscope-firmware.uf2
          cp source/LICENSE.txt kinetoscope-firmware/
          echo "The Kinetoscope firmware is built for the Raspberry Pi Pico W." >> kinetoscope-firmware/README.txt
          mv kinetoscope-firmware kinetoscope-$VERSION-firmware
          zip -r9 kinetoscope-$VERSION-firmware.zip kinetoscope-$VERSION-firmware/

          # Prep hardware fab files.
          (cd kinetoscope-hardware

            for project in cart microcontroller sram-bank; do
              unzip $project-fab.zip
              rm $project-fab.zip
              mv $project-fab kinetoscope-$VERSION-$project-fab
              mv kinetoscope-$VERSION-$project-fab/$project-front.pos.csv kinetoscope-$VERSION-$project-front.pos.csv
              mv kinetoscope-$VERSION-$project-fab/$project.bom.csv kinetoscope-$VERSION-$project.bom.csv
              zip -r9 kinetoscope-$VERSION-$project-fab.zip kinetoscope-$VERSION-$project-fab/
              rm -rf kinetoscope-$VERSION-$project-fab/
            done
          )

          cp source/LICENSE.txt kinetoscope-hardware/
          echo "These zip files contain Gerbers, BOM files, and position files for each board design." >> kinetoscope-hardware/README.txt
          echo "" >> kinetoscope-hardware/README.txt
          echo "The zip file can be uploaded to JLCPCB when they ask for Gerbers." >> kinetoscope-hardware/README.txt
          echo "*.bom.csv is the BOM file in JLCPCB format." >> kinetoscope-hardware/README.txt
          echo "*-front.pos.csv is the position file in JLCPCB format." >> kinetoscope-hardware/README.txt
          mv kinetoscope-hardware kinetoscope-$VERSION-hardware
          zip -r9 kinetoscope-$VERSION-hardware.zip kinetoscope-$VERSION-hardware/

          # Prep emulator binaries.
          echo "This build of BlastEm supports Kinetoscope emulation." >> kinetoscope-blastem64-0.6.2-linux-x64/README.kinetoscope.txt
          echo "Canned videos are required for emulation." >> kinetoscope-blastem64-0.6.2-linux-x64/README.kinetoscope.txt
          echo "See https://github.com/joeyparrish/kinetoscope/tree/main/canned-videos#readme" >> kinetoscope-blastem64-0.6.2-linux-x64/README.kinetoscope.txt
          mv kinetoscope-blastem64-0.6.2-linux-x64 kinetoscope-$VERSION-blastem64-0.6.2-linux-x64
          zip -r9 kinetoscope-$VERSION-blastem64-0.6.2-linux-x64.zip kinetoscope-$VERSION-blastem64-0.6.2-linux-x64/

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          fail_on_unmatched_files: true
          generate_release_notes: false
          make_latest: true
          files: |
            kinetoscope-*-encoder.zip
            kinetoscope-*-player.zip
            kinetoscope-*-never-gonna-give-you-up-rom.zip
            kinetoscope-*-you-spin-me-round-rom.zip
            kinetoscope-*-streamer-rom.zip
            kinetoscope-*-firmware.zip
            kinetoscope-*-hardware.zip
            kinetoscope-*-blastem64-0.6.2-linux-x64.zip
